---
services:
  redis:
    image: redis:7-alpine
    command: redis-server
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - redis_data:/data
    networks:
      - n8n-network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  postgres:
    image: ankane/pgvector:v0.5.1
    environment:
      - POSTGRES_DB=n8n
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - n8n-network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3

  n8n-main:
    image: n8nio/n8n:latest
    ports:
      - "5678:5678"
    environment: &n8n-common-env
      # Database Configuration
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: n8n
      DB_POSTGRESDB_USER: postgres
      DB_POSTGRESDB_PASSWORD: password
      
      # Queue Configuration
      QUEUE_BULL_REDIS_HOST: redis
      QUEUE_BULL_REDIS_PORT: 6379
      EXECUTIONS_MODE: queue
      
      # Modern n8n Configuration
      N8N_RUNNERS_ENABLED: true
      N8N_RUNNERS_MODE: external
      N8N_RUNNERS_AUTH_TOKEN: your-secret-auth-token-here
      OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS: true
      
      # n8n Configuration
      N8N_HOST: saturno.local
      N8N_PORT: 5678
      N8N_PROTOCOL: http
      WEBHOOK_URL: http://saturno.local:5678/
      N8N_SECURE_COOKIE: false
      TZ: America/Sao_Paulo
      GENERIC_TIMEZONE: America/Sao_Paulo
      
      # Security & File Permissions
      N8N_BASIC_AUTH_ACTIVE: true
      N8N_BASIC_AUTH_USER: admin
      N8N_BASIC_AUTH_PASSWORD: changeme
      N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: true
      
      # Logs
      N8N_LOG_LEVEL: info
      N8N_LOG_OUTPUT: console
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - n8n-network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'node', '-v']
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 60s

  n8n-worker:
    image: n8nio/n8n:latest
    command: worker
    environment:
      <<: *n8n-common-env
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - n8n-network
    deploy:
      replicas: 3  # Adjust based on your needs
      placement:
        max_replicas_per_node: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      n8n-main:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'node', '-v']
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 60s

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  n8n_data:
    driver: local

networks:
  n8n-network:
    driver: overlay
    attachable: true